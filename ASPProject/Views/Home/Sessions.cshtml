@{
    ViewData["Title"] = "Sessions";
}

<div class="text-center">
    <h1 class="display-4">Sessions</h1>
</div>


<p>
    Сессии - термин,обозначающий действия,ограниченные некоторым промежутком
    времени.HTTP-сессии - механизмЮпозволяющий сохранять данные в течении
    некоторого времени,большего,чем время запроса
</p>
<p>
    Зачем?
    HTTP - сервер каждый запрос обслуживает как новый,контроллеры пересоздаются.
    Можно сказать,что каждый запрос перезапускает приложение. При этом актуален вопрос - 
    а как сохранить данные между запросами?
</p>
<p>
    При старте сессии в каждый ответ на запрос пользователя включается специальные данные
    - Cookie. Это заголовки паекта, которые по стандарту должны будут включаться 
    браузером во все повторные запросы к данному серверу.Если в запросе есть уже Cookie,
    то по его значению восстанавливаются данные,сохраненные при прошлом запросе. 
</p>
<p>
    <a href="https://learn.microsoft.com/en-us/aspnet/core/fundamentals/app-state?view=aspnetcore-7.0">Настройка сессии</a>
</p>
<ul>
    <li>Подключение службы хранения в памяти <code>builder.Services.AddDistributedMemoryCache();</code></li>
    <li>
        Настройка Cookie <code>
            builder.Services.AddSession(options =>
            {
            options.IdleTimeout = TimeSpan.FromSeconds(10);
            options.Cookie.HttpOnly = true;
            options.Cookie.IsEssential = true;
            });
        </code>
    </li>
    <li>Включение сессий <code>app.UseSession();</code></li>
</ul>

<p>
    После настройки и включении сессий, в контексте становится доступным свойство 
    Session. Обращение к контексту происходит по-разному в разных местах
    (контроллер, представление, служба и т.п.) но во всех местах сессия доступна.
    Сессия позволяет сохранять данные по принципу ключ-значение,получать или удалять их
</p>
<p>
    Данные в сессии: @ViewData["StoredValue"] <br/>
    <a asp-action="SetSession">Установить данные</a>
    <a asp-action="RemoveSession">Удалить данные</a>
</p>
<p>
    Основные направления по использованию сессии:
    а) сброс параметров - когда форма передает данные,они "прикрепляются"
    к запросу: видны в URL строке или в теле пакета.Обычно после обработки 
    данных производят перенаправление на адрес без параметров.
    Такие сессии ограничивают небольшим временем - еденицы секунд<br/>
    б) хранение данных, введенных пользователем. В частности данных входа в систему.
    Это позволяет "запоминать" пользователя и его данные. Такие сессии
    имеют большее время существования, ограничения - только политика сайта.
</p>